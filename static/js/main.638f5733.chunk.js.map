{"version":3,"sources":["utils/consts.js","components/Navbar.js","components/Login.js","components/Loader.js","routes.js","components/Chat.js","components/AppRouter.js","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","auth","useContext","Context","useAuthState","user","onClick","signOut","variant","to","Login","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","console","log","Loader","publicRoutes","path","Component","privateRoutes","firestore","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","sendMessage","add","uid","displayName","photoURL","text","createdAt","FieldValue","serverTimestamp","map","message","src","alt","onChange","e","target","AppRouter","component","exact","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.638f5733.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login'\r\nexport const CHAT_ROUTE = '/chat'","import React, {useContext} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst Navbar = () => {\r\n   const {auth} = useContext(Context)\r\n   const [user] = useAuthState(auth)\r\n\r\n   return (\r\n\r\n      <div>\r\n         {user ?\r\n            <button onClick={() => auth.signOut()} variant={\"outlined\"}>выйти</button>\r\n            :\r\n            <NavLink to={LOGIN_ROUTE}>\r\n               <button variant={\"outlined\"}>логин</button>\r\n            </NavLink>\r\n         }\r\n      </div>\r\n\r\n   );\r\n};\r\n\r\nexport default Navbar;","import React, {useContext} from 'react';\r\nimport {Context} from \"../index\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Login = () => {\r\n   const {auth} = useContext(Context)\r\n   \r\n   const login = async () => {\r\n      const provider = new firebase.auth.GoogleAuthProvider()\r\n      const {user} = await auth.signInWithPopup(provider)\r\n      console.log(user)\r\n   }\r\n\r\n   return (\r\n      <button onClick={login} variant={\"outlined\"}>Войти через google</button>\r\n   );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n   return (\r\n      <p>Загрузка...</p>\r\n   );\r\n};\r\n\r\nexport default Loader;","import {CHAT_ROUTE, LOGIN_ROUTE} from \"./utils/consts\";\r\nimport Login from \"./components/Login\";\r\nimport Chat from \"./components/Chat\";\r\n\r\nexport const publicRoutes = [\r\n   {\r\n      path: LOGIN_ROUTE,\r\n      Component: Login\r\n   }\r\n]\r\n\r\nexport const privateRoutes = [\r\n   {\r\n      path: CHAT_ROUTE,\r\n      Component: Chat\r\n   }\r\n]","import React, {useContext, useState} from 'react';\r\nimport {Context} from \"../index\"\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport Loader from \"./Loader\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Chat = () => {\r\n   const {auth, firestore} = useContext(Context)\r\n   const [user] = useAuthState(auth)\r\n   const [value, setValue] = useState('')\r\n   const [messages, loading] = useCollectionData(\r\n      firestore.collection('messages').orderBy('createdAt')\r\n   )\r\n\r\n   const sendMessage = async () => {\r\n      firestore.collection('messages').add({\r\n         uid: user.uid,\r\n         displayName: user.displayName,\r\n         photoURL: user.photoURL,\r\n         text: value,\r\n         createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n      })\r\n      setValue('')\r\n   }\r\n\r\n   if (loading) {\r\n      return <Loader/>\r\n   }\r\n\r\n   return (\r\n\r\n      <div>\r\n         {messages.map(message =>\r\n            <div>\r\n               <div>\r\n                  <img src={message.photoURL} alt='аватар'></img>\r\n                  <p>{message.displayName}</p>\r\n               </div>\r\n               <span>{message.text}</span>\r\n            </div>\r\n         )}\r\n         \r\n         <textarea value={value} onChange={e => setValue(e.target.value)}></textarea>\r\n         <button onClick={sendMessage} variant={\"outlined\"}>Отправить</button>\r\n      </div>\r\n\r\n   );\r\n};\r\n\r\nexport default Chat;","import React, {useContext} from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\nimport {privateRoutes, publicRoutes} from \"../routes\";\r\nimport {CHAT_ROUTE, LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {Context} from \"../index\";\r\n\r\nconst AppRouter = () => {\r\n   const {auth} = useContext(Context)\r\n   const [user] = useAuthState(auth)\r\n\r\n   return user ?\r\n      (\r\n         <Switch>\r\n            {privateRoutes.map(({path, Component}) =>\r\n               <Route key={path} path={path} component={Component} exact={true}/>\r\n            )}\r\n            <Redirect to={CHAT_ROUTE}/>\r\n         </Switch>\r\n      )\r\n      :\r\n      (\r\n         <Switch>\r\n            {publicRoutes.map(({path, Component}) =>\r\n               <Route key={path} path={path} component={Component} exact={true}/>\r\n            )}\r\n            <Redirect to={LOGIN_ROUTE}/>\r\n         </Switch>\r\n      )\r\n};\r\n\r\nexport default AppRouter;","import React, {useContext} from 'react';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport Navbar from \"./components/Navbar\";\r\nimport AppRouter from \"./components/AppRouter\"\r\nimport './App.css'\r\nimport {Context} from \"./index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport Loader from \"./components/Loader\";\r\n\r\nconst App = () => {\r\n   const {auth} = useContext(Context)\r\n   const [user, loading, error] = useAuthState(auth)\r\n\r\n   if (loading) {\r\n      return <Loader />\r\n   }\r\n\r\n   return (\r\n      <BrowserRouter>\r\n         <Navbar />\r\n         <AppRouter />\r\n      </BrowserRouter>\r\n   );\r\n};\r\n\r\nexport default App;","import React, {createContext} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport firebase from \"firebase\";\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nfirebase.initializeApp({\r\n   apiKey: \"AIzaSyD8fBhhzn7AZw67Utf9rQVAke1Fzh44K5o\",\r\n   authDomain: \"react-messenger-be893.firebaseapp.com\",\r\n   projectId: \"react-messenger-be893\",\r\n   storageBucket: \"react-messenger-be893.appspot.com\",\r\n   messagingSenderId: \"857764640503\",\r\n   appId: \"1:857764640503:web:429d3720d23ef271b0c5f2\",\r\n   measurementId: \"G-16PNN1JV4K\"\r\n   }\r\n);\r\n\r\nexport const Context = createContext(null)\r\n\r\nconst auth = firebase.auth()\r\nconst firestore = firebase.firestore()\r\n\r\nReactDOM.render(\r\n   <Context.Provider value={{\r\n      firebase,\r\n      auth,\r\n      firestore\r\n   }}>\r\n      <App />\r\n   </Context.Provider>,\r\n   document.getElementById('root')\r\n);"],"sourceRoot":""}